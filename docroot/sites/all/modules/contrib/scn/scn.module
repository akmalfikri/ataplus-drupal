<?php

/**
 * @file
 * Main file for the scn module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\user\Entity\User;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function scn_help($route_name, RouteMatchInterface $route_match) {
  return '';
}

/**
 * Implements hook_mail().
 */
function scn_mail($key, &$message, $params) {
  switch ($key) {
    case 'new_comment':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('New comment on @siteName', [
        '@siteName' => \Drupal::config('system.site')->get('name'),
      ]);
      $message['body'][] = t('You can check the page at :unapprovedCommentsUrl for unapproved comments and :publishedCommentsUrl for published comments.', [
        ':unapprovedCommentsUrl' => \Drupal::request()->getSchemeAndHttpHost() . '/admin/content/comment/approval',
        ':publishedCommentsUrl'  => \Drupal::request()->getSchemeAndHttpHost() . '/admin/content/comment',
      ]);
      break;
  }
}

/**
 * Send mail common function.
 */
function _scn_send_mail($to, $subject) {
  if (\Drupal::service('email.validator')->isValid($to)) {
    $mailManager = \Drupal::service('plugin.manager.mail');
    $langcode = \Drupal::currentUser()->getPreferredLangcode();

    $mailManager->mail('scn', 'new_comment', $to, $langcode, NULL, NULL, TRUE);

    \Drupal::logger('Simple Comment Notify')->notice(t('Sent eMail notification for comment with subject "@subject" 
    to the site administrator eMail address :siteAdministratorEmailAddress', [
      '@subject'                       => $subject,
      ':siteAdministratorEmailAddress' => $to,
    ]));
  }
}

/**
 * Implements hook_entity_insert().
 */
function scn_entity_insert(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'comment') {
    $to = '';
    $config = \Drupal::config('scn.settings');
    $subject = $entity->getSubject();

    // Send to admin.
    if ($config->get('scn_admin')) {
      $account = User::load(1);
      $to = $account->getEmail();
      _scn_send_mail($to, $subject);
    }

    // Send to users with roles.
    foreach (array_values($config->get('scn_roles')) as $user_role) {
      if ($user_role !== 0) {
        $ids = \Drupal::entityQuery('user')
          ->condition('status', 1)
          ->condition('roles', $user_role)
          ->execute();
        $users = User::loadMultiple($ids);
        if (!empty(array_filter($users))) {
          foreach ($users as $user) {
            $to = $user->getEmail();
            _scn_send_mail($to, $subject);
          }
        }
      }
    }

    // Send to non-registered users.
    if (!empty($config->get('scn_maillist'))) {
      $mails = explode(',', $config->get('scn_maillist'));
      foreach ($mails as $mail) {
        $to = $mail;
        _scn_send_mail($to, $subject);
      }
    }

  }
}
